// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CurrencyApp renders correctly and contain children components renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CurrencyApp />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Unknown />,
        <div>
          <Table
                    list={Array []}
          />
          <Form
                    getDataFromForm={[Function]}
                    list={Array []}
                    options={Array []}
          />
</div>,
        <footer>
          <div
                    className="text-right"
          >
                    timmer: 10:45:22
          </div>
</footer>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Table
              list={Array []}
/>,
            <Form
              getDataFromForm={[Function]}
              list={Array []}
              options={Array []}
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "list": Array [],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "getDataFromForm": [Function],
              "list": Array [],
              "options": Array [],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="text-right"
>
            timmer: 10:45:22
</div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "timmer: 10:45:22",
            "className": "text-right",
          },
          "ref": null,
          "rendered": "timmer: 10:45:22",
          "type": "div",
        },
        "type": "footer",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Unknown />,
          <div>
            <Table
                        list={Array []}
            />
            <Form
                        getDataFromForm={[Function]}
                        list={Array []}
                        options={Array []}
            />
</div>,
          <footer>
            <div
                        className="text-right"
            >
                        timmer: 10:45:22
            </div>
</footer>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Table
                list={Array []}
/>,
              <Form
                getDataFromForm={[Function]}
                list={Array []}
                options={Array []}
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "list": Array [],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "getDataFromForm": [Function],
                "list": Array [],
                "options": Array [],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="text-right"
>
              timmer: 10:45:22
</div>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "timmer: 10:45:22",
              "className": "text-right",
            },
            "ref": null,
            "rendered": "timmer: 10:45:22",
            "type": "div",
          },
          "type": "footer",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
